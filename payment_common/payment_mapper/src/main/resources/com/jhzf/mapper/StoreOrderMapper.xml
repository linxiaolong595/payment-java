<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--
      mapper为映射的根节点，用来管理DAO接口
      namespace指定DAO接口的完整类名，表示mapper配置文件管理哪个DAO接口(包.接口名)
      mybatis会依据这个接口动态创建一个实现类去实现这个接口，而这个实现类是一个Mapper对象
   -->
<mapper namespace="com.jhzf.mapper.StoreOrderMapper">
    <select id="getStoreDailyOrder" resultType="double">
        SELECT
            sum(order_money)
        FROM
            payment_order
        WHERE
            order_createtime
        BETWEEN
            #{startTime}
        AND
            #{endTime}
        and
            order_store_id = 1
        ORDER BY
            order_createtime;
    </select>
    <select id="getStoreRebackMonthOrder" resultType="string">
        SELECT
            sum(order_money)
        FROM
            payment_order
        WHERE
            order_createtime
        BETWEEN
             #{startTime}
        AND
             #{endTime}
        and
            order_store_id = #{storeId}
        and
            order_reback = 1
    </select>
    <select id="getStoreProfitMonthOrders" resultType="string">
        select
            sum(order_money)
        from
            payment_order
        where
            order_store_id = #{storeId}
        and
            order_reback = 0
        and
            order_createtime
        between
            #{startTime}
        AND
            #{endTime}
    </select>
    <select id="profitOrderCount" resultType="java.lang.String">
        select
            count(*)
        from
            payment_order
        where
            order_store_id = #{storeId}
            and
            order_reback = 0
            and
            order_createtime
            between
            #{startTime}
            AND
            #{endTime}
    </select>
    <select id="rebackOrderCount" resultType="java.lang.String">
        select
            count(*)
        from
            payment_order
        where
            order_store_id = #{storeId}
          and
            order_reback = 1
          and
            order_createtime
                between
                #{startTime}
                AND
                #{endTime}
    </select>
</mapper>